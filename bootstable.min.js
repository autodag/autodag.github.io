"use strict";function IterarCamposEdit(t,n){function i(t){if(null==colsEdi)return!0;for(var n=0;n<colsEdi.length;n++)if(t==colsEdi[n])return!0;return!1}var o=0;t.each(function(){o++,"buttons"!=$(this).attr("name")&&i(o-1)&&n($(this))})}function FijModoNormal(t){$(t).parent().find("#bAcep").hide(),$(t).parent().find("#bCanc").hide(),$(t).parent().find("#bEdit").show(),$(t).parent().find("#bElim").show(),$(t).parents("tr").attr("id","")}function FijModoEdit(t){$(t).parent().find("#bAcep").show(),$(t).parent().find("#bCanc").show(),$(t).parent().find("#bEdit").hide(),$(t).parent().find("#bElim").hide(),$(t).parents("tr").attr("id","editing")}function ModoEdicion(t){return"editing"==t.attr("id")}function rowAcep(t){var n=$(t).parents("tr"),i=n.find("td");ModoEdicion(n)&&(IterarCamposEdit(i,function(t){var n=t.find("input").val().replace(/, /g,",");t.html(n.replace(/,/g,", "))}),FijModoNormal(t),params.onEdit(n))}function rowCancel(t){var n=$(t).parents("tr"),i=n.find("td");ModoEdicion(n)&&(IterarCamposEdit(i,function(t){var n=t.find("div").html();t.html(n)}),FijModoNormal(t))}function rowEdit(t){var n=$(t).parents("tr"),i=n.find("td");ModoEdicion(n)||(IterarCamposEdit(i,function(t){var n=t.html(),i='<div style="display: none;">'+n+"</div>",o='<input class="form-control input-sm" value="'+n+'">';t.html(i+o)}),FijModoEdit(t))}function rowElim(t){$(t).parents("tr").remove(),params.onDelete()}function rowAgreg(){if(0==$tab_en_edic.find("tbody tr").length){var t="";(i=$tab_en_edic.find("thead tr").find("th")).each(function(){"buttons"==$(this).attr("name")?t+=colEdicHtml:t+="<td></td>"}),$tab_en_edic.find("tbody").append("<tr>"+t+"</tr>")}else{var n=$tab_en_edic.find("tr:last");n.clone().appendTo(n.parent());var i=(n=$tab_en_edic.find("tr:last")).find("td");i.each(function(){"buttons"==$(this).attr("name")||$(this).html("")})}}function TableToCSV(t){var n="",i="";return $tab_en_edic.find("tbody tr").each(function(){ModoEdicion($(this))&&$(this).find("#bAcep").click();var o=$(this).find("td");n="",o.each(function(){"buttons"==$(this).attr("name")||(n=n+$(this).html()+t)}),""!=n&&(n=n.substr(0,n.length-t.length)),i=i+n+"\n"}),i}var $tab_en_edic=null,params=null,colsEdi=null,newColHtml='<div class="btn-group pull-right"><button id="bEdit" type="button" class="btn btn-sm btn-default" onclick="rowEdit(this);"><span class="glyphicon glyphicon-pencil" > </span></button><button id="bElim" type="button" class="btn btn-sm btn-default" onclick="rowElim(this);"><span class="glyphicon glyphicon-trash" > </span></button><button id="bAcep" type="button" class="btn btn-sm btn-default" style="display:none;" onclick="rowAcep(this);"><span class="glyphicon glyphicon-ok" > </span></button><button id="bCanc" type="button" class="btn btn-sm btn-default" style="display:none;" onclick="rowCancel(this);"><span class="glyphicon glyphicon-remove" > </span></button></div>',colEdicHtml='<div><th name="buttons">'+newColHtml+"</th></div>";$.fn.SetEditable=function(t){var n={columnsEd:null,$addButton:null,onEdit:function(){},onDelete:function(){},onAdd:function(){}};params=$.extend(n,t),this.find("thead tr").append('<th name="buttons"></th>'),this.find("tbody tr").append(colEdicHtml),$tab_en_edic=this,null!=params.$addButton&&params.$addButton.click(function(){rowAgreg()}),null!=params.columnsEd&&(colsEdi=params.columnsEd.split(","))};

$(document).ready(function() {

  function exportTableToCSV($table, filename) {

    var $rows = $table.find('tr:has(td)'),

      // Temporary delimiter characters unlikely to be typed by keyboard
      // This is to avoid accidentally splitting the actual contents
      tmpColDelim = String.fromCharCode(11), // vertical tab character
      tmpRowDelim = String.fromCharCode(0), // null character

      // actual delimiter characters for CSV format

      colDelim = '","',
      rowDelim = '"\r\n"',

      // Grab text from table into CSV formatted string
      csv = '"' + $rows.map(function(i, row) {
        var $row = $(row),
          $cols = $row.find('td');
        return $cols.map(function(j, col) {
          var $col = $(col),
            text = $col.text();

          return text.replace(/"/g, '""'); // escape double quotes

        }).get().join(tmpColDelim);

      }).get().join(tmpRowDelim)
      .split(tmpRowDelim).join(rowDelim)
      .split(tmpColDelim).join(colDelim) + '"';

    // Deliberate 'false', see comment below
    if (false && window.navigator.msSaveBlob) {

      var blob = new Blob([decodeURIComponent(csv)], {
        type: 'text/csv;charset=utf8'
      });

      // Crashes in IE 10, IE 11 and Microsoft Edge
      // See MS Edge Issue #10396033
      // Hence, the deliberate 'false'
      // This is here just for completeness
      // Remove the 'false' at your own risk
      window.navigator.msSaveBlob(blob, filename);

    } else if (window.Blob && window.URL) {
      // HTML5 Blob
      var blob = new Blob([csv], {
        type: 'text/csv;charset=utf-8'
      });
      var csvUrl = URL.createObjectURL(blob);

      $(this)
        .attr({
          'download': filename,
          'href': csvUrl
        });
    } else {
      // Data URI
      var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

      $(this)
        .attr({
          'download': filename,
          'href': csvData,
          'target': '_blank'
        });
    }
  }

  // This must be a hyperlink
  $(".export").on('click', function(event) {
    // CSV
    var args = [$('#dvData>table'), 'graph.csv'];

    downloadSetup();
    exportTableToCSV.apply(this, args);
    saveTextAsFile();
    // If CSV, don't do event.preventDefault() or return false
    // We actually need this to be a typical hyperlink
  });
});

function downloadSetup()
{
    var link = document.createElement("a");
    link.download = "auto_dag_csv_opt_py.py";
    link.href = "auto_dag_csv_opt_py.py";
    link.click();
}

function saveTextAsFile()
{
    var textStartDate = document.getElementById("inputStartDate").value;
    textStartDate = textStartDate.replace('T',' ');
    textStartDate = textStartDate.concat(':00');
    textStartDate = '\nstart_date = '.concat(textStartDate);
    var textPath = document.getElementById("inputPath").value;
    textPath = '\ndir_path = '.concat(textPath);
    var textGraphPath = '\ngraph_path = '.concat("graph.csv");
    var textSaveAs = '[Configuration]'.concat(textStartDate,textPath,textGraphPath);
    textSaveAs = textSaveAs.replace(/\n/g, "\r\n");
    var textToSaveAsBlob = new Blob([textSaveAs], {type:"text/plain"});
    var FileSaver = require('file-saver');
    var blob = new Blob(["Hello, world!"], {type: "text/plain;charset=utf-8"});
    FileSaver.saveAs(blob, "hello world.txt");
    var textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);

    var downloadLink = document.createElement("a");
    downloadLink.download = "setting.txt";
    downloadLink.innerHTML = "Download File";
    downloadLink.href = textToSaveAsURL;
    downloadLink.onclick = destroyClickedElement;
    downloadLink.style.display = "none";
    document.body.appendChild(downloadLink);

    downloadLink.click();
}

function destroyClickedElement(event)
{
    document.body.removeChild(event.target);
}

document.querySelector("button").addEventListener("click",function () {
    downloadSetup();
    exportTableToCSV.apply(this, args);
    saveTextAsFile();
});
